//Biến var
- Biến var sẽ có scope là globally scoped. Đặc biệt, biến var còn có thêm tính chất hoisting: nghĩa là dù khai báo ở đâu thì biến 
đều sẽ được đem lên đầu scope trước khi code được thực hiện.
- Có thể bị thay đổi giá trị, kể cả trong block {} hay local(là mấy cái trong function)

//Biến let
-Biến let được khai báo sẽ có scope là block scoped chứ không phải globally hay locally scoped(trong function).
-Cho phép chúng ta cập nhật giá trị của biến chứ không cho phép chúng ta tái khái báo lại biến đó.

//Biến const
-Trong biến const nếu trường hợp kiểu của biến là primitive (bao gồm string, number, boolean, null, và undefined) thì chúng ta sẽ 
không thể tái khai báo hay cập nhật giá trị mới để thay thế cho giá trị trước đó của biến --> 1 khi đã gán thì khỏi sửa lần 2
-Đối với trường hợp kiểu biến là reference (bao gồm object, array, và function) thì tuy không thể tái khai báo hay cập nhật giá trị
của biến nhưng chúng ta vẫn có thể cập nhật giá trị cho thuộc tính của biến đó.
const greeting = {
    message : "Hello",
    number : "five"
}
greeting.message = "say Hello instead";
console.log(greeting); // {message:"say Hello instead",number:"five"}